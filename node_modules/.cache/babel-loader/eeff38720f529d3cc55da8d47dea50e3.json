{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\91970\\\\Downloads\\\\React - Apps\\\\Covid-19\\\\covid-final\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:\\\\Users\\\\91970\\\\Downloads\\\\React - Apps\\\\Covid-19\\\\covid-final\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\91970\\\\Downloads\\\\React - Apps\\\\Covid-19\\\\covid-final\\\\src\\\\MainPage\\\\Mainpage.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport HeaderBar from \"../HeaderBar/HeaderBar\";\nimport DispDistrictData from \"../DispDistrictData/DispDistrictdata\";\nimport { getdata } from \"../Store/actions\";\n\nvar MainPage = function MainPage() {\n  var dispatch = useDispatch();\n  var covidData = useSelector(function (state) {\n    return state.covidfData;\n  });\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedState = _useState2[0],\n      setselectedState = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      sortValue = _useState4[0],\n      setsortValue = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      sortParam = _useState6[0],\n      setsortParam = _useState6[1];\n\n  useEffect(function () {\n    dispatch(getdata());\n  }, [dispatch]);\n  var sortTypes = [\"active\", \"confirmed\", \"recovered\"];\n  var sortOrders = [\"Asc\", \"Desc\"];\n  var statesData = Object.keys(covidData);\n\n  if (selectedState !== '' && sortParam !== '' && sortValue !== '') {\n    var transformedData = [];\n    var SortedArray = [];\n    var districtsData = data[selValue].districtData;\n    var DistrictNames = Object.keys(districtsData);\n    Object.keys(districtsData).map(function (key) {\n      transformedData = [].concat(_toConsumableArray(transformedData), [data[selValue].districtData[key]]);\n    });\n\n    if (orderby === \"Desc\") {\n      SortedArray = transformedData.sort(function (a, b) {\n        if (a[sortby] > b[sortby]) return -1;\n        if (a[sortby] < b[sortby]) return 1;else return 0;\n      });\n    } else {\n      SortedArray = transformedData.sort(function (a, b) {\n        if (a[sortby] > b[sortby]) return 1;\n        if (a[sortby] < b[sortby]) return -1;else return 0;\n      });\n    }\n  }\n\n  var useStyles = makeStyles({\n    root: {\n      background: \"linear-gradient(45deg,  #FF8E53 90%)\",\n      border: 0,\n      borderRadius: 3,\n      boxShadow: \"0 3px 5px 2px rgba(255, 105, 135, .3)\",\n      color: \"white\",\n      margin: \"10px 0\",\n      height: 75,\n      padding: \"0 30px\"\n    }\n  });\n  var classes = useStyles();\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(HeaderBar, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    style: {\n      padding: \"auto 50px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    id: \"states\",\n    options: statesData,\n    style: {\n      width: 350\n    },\n    onChange: function onChange(event, newValue) {\n      setselectedState(newValue);\n    },\n    renderInput: function renderInput(params) {\n      return /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n        label: \"States\",\n        variant: \"outlined\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    style: {\n      padding: \"auto 50px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    id: \"sorttype\",\n    options: sortTypes,\n    style: {\n      width: 350\n    },\n    onChange: function onChange(event, newValue) {\n      setsortValue(newValue);\n    },\n    renderInput: function renderInput(params) {\n      return /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n        label: \"SortBy\",\n        variant: \"outlined\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    style: {\n      padding: \"auto 50px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    id: \"sortorder\",\n    options: sortOrders,\n    style: {\n      width: 350\n    },\n    onChange: function onChange(event, newValue) {\n      setsortParam(newValue);\n    },\n    renderInput: function renderInput(params) {\n      return /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n        label: \"OrderBy\",\n        variant: \"outlined\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  })))), selectedState !== \"\" && sortValue !== \"\" && sortParam !== \"\" ? /*#__PURE__*/React.createElement(DispDistrictData, {\n    selValue: selectedState,\n    data: covidData,\n    sortby: sortValue,\n    orderby: sortParam,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }) : null);\n};\n\nexport default MainPage;","map":{"version":3,"sources":["C:/Users/91970/Downloads/React - Apps/Covid-19/covid-final/src/MainPage/Mainpage.js"],"names":["React","useState","useEffect","useDispatch","useSelector","makeStyles","Grid","TextField","Autocomplete","HeaderBar","DispDistrictData","getdata","MainPage","dispatch","covidData","state","covidfData","selectedState","setselectedState","sortValue","setsortValue","sortParam","setsortParam","sortTypes","sortOrders","statesData","Object","keys","transformedData","SortedArray","districtsData","data","selValue","districtData","DistrictNames","map","key","orderby","sort","a","b","sortby","useStyles","root","background","border","borderRadius","boxShadow","color","margin","height","padding","classes","width","event","newValue","params"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n\r\nimport HeaderBar from \"../HeaderBar/HeaderBar\";\r\nimport DispDistrictData from \"../DispDistrictData/DispDistrictdata\";\r\nimport { getdata } from \"../Store/actions\";\r\n\r\nconst MainPage = () => {\r\n  const dispatch = useDispatch();\r\n  const covidData = useSelector((state) => state.covidfData);\r\n  const [selectedState, setselectedState] = useState(\"\");\r\n  const [sortValue, setsortValue] = useState(\"\");\r\n  const [sortParam, setsortParam] = useState(\"\");\r\n  useEffect(() => {\r\n    dispatch(getdata());\r\n  }, [dispatch]);\r\n\r\n  const sortTypes = [\"active\", \"confirmed\", \"recovered\"];\r\n  const sortOrders = [\"Asc\", \"Desc\"];\r\n\r\n  const statesData = Object.keys(covidData);\r\n\r\n  if (selectedState!==''&& sortParam!==''&& sortValue!==''){\r\n    var transformedData = [];\r\n  var SortedArray = [];\r\n  const districtsData = data[selValue].districtData;\r\n  const DistrictNames = Object.keys(districtsData);\r\n\r\n  Object.keys(districtsData).map((key) => {\r\n    transformedData = [...transformedData, data[selValue].districtData[key]];\r\n  });\r\n  if (orderby === \"Desc\") {\r\n    SortedArray = transformedData.sort((a, b) => {\r\n      if (a[sortby] > b[sortby]) return -1;\r\n      if (a[sortby] < b[sortby]) return 1;\r\n      else return 0;\r\n    });\r\n  } else {\r\n    SortedArray = transformedData.sort((a, b) => {\r\n      if (a[sortby] > b[sortby]) return 1;\r\n      if (a[sortby] < b[sortby]) return -1;\r\n      else return 0;\r\n    });\r\n  }\r\n\r\n  }\r\n\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      background: \"linear-gradient(45deg,  #FF8E53 90%)\",\r\n      border: 0,\r\n      borderRadius: 3,\r\n      boxShadow: \"0 3px 5px 2px rgba(255, 105, 135, .3)\",\r\n      color: \"white\",\r\n      margin: \"10px 0\",\r\n      height: 75,\r\n      padding: \"0 30px\"\r\n    }\r\n  });\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <HeaderBar />\r\n      </div>\r\n      <div className={classes.root}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={4} style={{ padding: \"auto 50px\" }}>\r\n            <Autocomplete\r\n              id=\"states\"\r\n              options={statesData}\r\n              style={{ width: 350 }}\r\n              onChange={(event, newValue: string | null) => {\r\n                setselectedState(newValue);\r\n              }}\r\n              renderInput={(params) => (\r\n                <TextField {...params} label=\"States\" variant=\"outlined\" />\r\n              )}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={4} style={{ padding: \"auto 50px\" }}>\r\n            <Autocomplete\r\n              id=\"sorttype\"\r\n              options={sortTypes}\r\n              style={{ width: 350 }}\r\n              onChange={(event, newValue: string | null) => {\r\n                setsortValue(newValue);\r\n              }}\r\n              renderInput={(params) => (\r\n                <TextField {...params} label=\"SortBy\" variant=\"outlined\" />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4} style={{ padding: \"auto 50px\" }}>\r\n            <Autocomplete\r\n              id=\"sortorder\"\r\n              options={sortOrders}\r\n              style={{ width: 350 }}\r\n              onChange={(event, newValue: string | null) => {\r\n                setsortParam(newValue);\r\n              }}\r\n              renderInput={(params) => (\r\n                <TextField {...params} label=\"OrderBy\" variant=\"outlined\" />\r\n              )}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n      {selectedState !== \"\" && sortValue !== \"\" && sortParam !== \"\" ? (\r\n        <DispDistrictData\r\n          selValue={selectedState}\r\n          data={covidData}\r\n          sortby={sortValue}\r\n          orderby={sortParam}\r\n        />\r\n      ) : null}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n"]},"metadata":{},"sourceType":"module"}